name: Manual Sync from Sentinel

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to sync from'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: 'dev'
      branch_name:
        description: 'Branch name (leave empty for auto-generated)'
        required: false
        type: string
        default: ''
      rule_name:
        description: 'Specific rule name to sync (leave empty for all custom rules)'
        required: false
        type: string
        default: ''
      organization:
        description: 'Organization to sync (e.g., org1, org2, client-name)'
        required: true
        type: string
        default: ''
      force_sync:
        description: 'Force sync even if no changes detected'
        required: false
        type: boolean
        default: false

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  manual-sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup PowerShell
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Generate branch name
      id: branch-name
      run: |
        if [ -n "${{ inputs.branch_name }}" ]; then
          BRANCH_NAME="${{ inputs.branch_name }}"
        else
          TIMESTAMP=$(date -u +'%Y%m%d-%H%M%S')
          BRANCH_NAME="sync/${{ inputs.environment }}-$TIMESTAMP"
        fi
        echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "📝 Using branch: $BRANCH_NAME"

    - name: Set current date
      id: date
      run: |
        echo "today=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "timestamp=$(date -u +'%Y-%m-%d %H:%M UTC')" >> $GITHUB_OUTPUT

    - name: Sync from Sentinel
      id: sync
      run: |
        echo "🔄 Starting manual sync from ${{ inputs.environment }} environment..."
        
        # Set environment-specific secrets
        if [ "${{ inputs.environment }}" == "dev" ]; then
          RG_SECRET="${{ secrets.SENTINEL_RG_DEV }}"
          WS_SECRET="${{ secrets.SENTINEL_WS_DEV }}"
        else
          RG_SECRET="${{ secrets.SENTINEL_RG_PROD }}"
          WS_SECRET="${{ secrets.SENTINEL_WS_PROD }}"
        fi
        
        # Run sync script and capture output
        echo "Running sync script..."
        SYNC_OUTPUT=$(pwsh -File scripts/sync-sentinel-changes.ps1 \
          -ResourceGroup "$RG_SECRET" \
          -WorkspaceName "$WS_SECRET" \
          -Environment "${{ inputs.environment }}" \
          -Organization "${{ inputs.organization }}" \
          -ForceSync:${{ inputs.force_sync }} \
          -RuleName "${{ inputs.rule_name }}" 2>&1)
        
        echo "$SYNC_OUTPUT"
        
        # Check for GitOps alerts (rules missing in prod)
        if echo "$SYNC_OUTPUT" | grep -q "GitOps Alert:"; then
          echo "gitops-alert=true" >> $GITHUB_OUTPUT
          MISSING_RULES=$(echo "$SYNC_OUTPUT" | grep -A 10 "GitOps Alert:" | grep "   -" | sed 's/   - //' | tr '\n' ', ' | sed 's/, $//')
          echo "missing-rules=$MISSING_RULES" >> $GITHUB_OUTPUT
          echo "🚨 GitOps Alert: Rules missing in prod detected"
        else
          echo "gitops-alert=false" >> $GITHUB_OUTPUT
          echo "missing-rules=" >> $GITHUB_OUTPUT
          echo "✅ No GitOps alerts - all rules in sync"
        fi

    - name: Check for changes
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes-detected=true" >> $GITHUB_OUTPUT
          echo "📝 Changes detected in sync"
          git status --porcelain
        else
          echo "changes-detected=false" >> $GITHUB_OUTPUT
          echo "✅ No changes detected in sync"
        fi

    - name: Determine PR action needed
      id: pr-decision
      run: |
        # Create PR if there are file changes OR GitOps alerts
        if [ "${{ steps.check-changes.outputs.changes-detected }}" == "true" ] || [ "${{ steps.sync.outputs.gitops-alert }}" == "true" ]; then
          echo "create-pr=true" >> $GITHUB_OUTPUT
          echo "🎯 PR creation needed: Changes=${{ steps.check-changes.outputs.changes-detected }}, GitOps Alert=${{ steps.sync.outputs.gitops-alert }}"
        else
          echo "create-pr=false" >> $GITHUB_OUTPUT
          echo "✅ No PR needed: No changes and no GitOps alerts"
        fi

    - name: Debug outputs
      run: |
        echo "changes-detected = ${{ steps.check-changes.outputs.changes-detected }}"
        echo "gitops-alert = ${{ steps.sync.outputs.gitops-alert }}"
        echo "missing-rules = ${{ steps.sync.outputs.missing-rules }}"
        echo "create-pr = ${{ steps.pr-decision.outputs.create-pr }}"

    - name: Create GitOps deployment marker
      if: steps.pr-decision.outputs.create-pr == 'true' && steps.check-changes.outputs.changes-detected == 'false' && steps.sync.outputs.gitops-alert == 'true'
      run: |
        echo "Creating GitOps deployment marker for PR creation..."
        mkdir -p .gitops
        echo "# GitOps Deployment Required - $(date -u +'%Y-%m-%d %H:%M UTC')" > .gitops/deploy-needed.md
        echo "" >> .gitops/deploy-needed.md
        echo "Rules missing in production:" >> .gitops/deploy-needed.md
        echo "- ${{ steps.sync.outputs.missing-rules }}" >> .gitops/deploy-needed.md
        echo "" >> .gitops/deploy-needed.md
        echo "This file triggers PR creation when no code changes exist but deployment is needed." >> .gitops/deploy-needed.md
        
        # Add to git so PR can be created
        git add .gitops/deploy-needed.md
        
        echo "📝 Created GitOps deployment marker"

    - name: Create Pull Request
      if: steps.pr-decision.outputs.create-pr == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.branch-name.outputs.branch-name }}
        base: main
        title: "${{ steps.sync.outputs.gitops-alert == 'true' && '🚨 GitOps: Deploy to Prod' || '🔄 Manual Sync' }} from ${{ inputs.environment }} - ${{ steps.date.outputs.today }}"
        body: |
          ## ${{ steps.sync.outputs.gitops-alert == 'true' && 'GitOps Deployment Required' || 'Manual Sync' }} from ${{ inputs.environment }} Environment
          
          ${{ steps.sync.outputs.gitops-alert == 'true' && '⚠️ **This PR is required for GitOps deployment!**' || 'This PR contains changes synced from the Sentinel environment.' }}
          
          **Environment:** ${{ inputs.environment }}
          **Branch:** ${{ steps.branch-name.outputs.branch-name }}
          **Rule:** ${{ inputs.rule_name || 'All custom rules' }}
          **Timestamp:** ${{ steps.date.outputs.timestamp }}
          
          ${{ steps.sync.outputs.gitops-alert == 'true' && format('### 🚨 Rules Missing in Production
          
          The following rules exist in dev but are missing from production:
          - {0}
          
          **Action Required:** Merging this PR will trigger the deployment workflow to deploy these rules to production.
          
          ', steps.sync.outputs.missing-rules) || '' }}### Changes
          ${{ steps.check-changes.outputs.changes-detected == 'true' && '- Synced KQL queries
          - Updated rule configurations' || '- No file changes (GitOps deployment only)
          - Added deployment marker file' }}
          - Custom rules only (vendor rules excluded)
          
          ${{ steps.sync.outputs.gitops-alert == 'true' && '⚠️ **Important:** This PR ensures dev/prod environment parity.' || 'Please review the changes before merging.' }}
        commit-message: "${{ steps.sync.outputs.gitops-alert == 'true' && '🚨 GitOps deployment required' || '🔄 Manual sync' }} from ${{ inputs.environment }} - ${{ steps.date.outputs.timestamp }}"
        delete-branch: true
        
    - name: Clean up GitOps marker
      if: steps.pr-decision.outputs.create-pr == 'true' && steps.check-changes.outputs.changes-detected == 'false' && steps.sync.outputs.gitops-alert == 'true'
      run: |
        # Remove the marker file after PR creation
        rm -rf .gitops
        echo "🧹 Cleaned up GitOps deployment marker"

    - name: No action needed notification
      if: steps.pr-decision.outputs.create-pr == 'false'
      run: |
        echo "ℹ️ No action needed:"
        echo "   - File changes: ${{ steps.check-changes.outputs.changes-detected }}"
        echo "   - GitOps alerts: ${{ steps.sync.outputs.gitops-alert }}"
        echo "   - All environments are in sync ✅"
