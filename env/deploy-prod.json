{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "16707490908154294526"
    }
  },
  "parameters": {
    "workspaceName": {
      "type": "string",
      "defaultValue": "sentinel-rg-prod",
      "metadata": {
        "description": "Log Analytics workspace name (Sentinel-enabled)"
      }
    }
  },
  "variables": {
    "kqlEncoded": "SecurityEvent\n| where EventID == 4688\n| where (NewProcessName has_cs \"powershell.exe\" or Process has_cs \"powershell.exe\")\n| where CommandLine has_any (\" -enc\", \"-EncodedCommand\")\n| extend EncArg = extract(@\"(?i)-enc(?:odedCommand)?\\s+(['\"\"])?([A-Za-z0-9+/=]+)\\1\", 2, CommandLine)\n| where isnotempty(EncArg)\n| project TimeGenerated, Computer, SubjectUserName, CommandLine, EncArg\n",
    "kqlLogin": "SigninLogs\n| where TimeGenerated > ago(1h)\n| where ResultType != 0\n| summarize FailedCount = count(), Applications = make_set(AppDisplayName), Locations = make_set(Location), TimeSpan = max(TimeGenerated) - min(TimeGenerated) by IPAddress, bin(TimeGenerated, 5m)\n| where FailedCount >= 5\n| where TimeSpan < 30m\n| take 100\n",
    "kqlAdmin": "SigninLogs\n| where TimeGenerated > ago(1h)\n| where ResultType == 0\n| where UserPrincipalName has \"@\"\n| where AppDisplayName in~ (\"Microsoft Azure PowerShell\", \"Microsoft Azure CLI\", \"Azure Portal\")\n| summarize LoginCount = count(), Applications = make_set(AppDisplayName), IPAddresses = make_set(IPAddress), Locations = make_set(Location), TimeSpan = max(TimeGenerated) - min(TimeGenerated) by UserPrincipalName, bin(TimeGenerated, 5m)\n| where LoginCount >= 2\n| where TimeSpan < 30m\n| take 100\n",
    "kqltest1": "SecurityEvent| where EventID == 4624| where LogonType == 3| where TimeGenerated > ago(1h)| project TimeGenerated, Computer, SubjectUserName, IpAddress, LogonType\n",
    "kqltest2": "SecurityEvent| where EventID == 4624| where LogonType == 3| where TimeGenerated > ago(1h)| project TimeGenerated, Computer, SubjectUserName, IpAddress, LogonType\n",
    "rules": [
      {
        "name": "uc-powershell-encoded",
        "displayName": "[PROD] [ORG] – Suspicious PowerShell (EncodedCommand)",
        "kql": "[variables('kqlEncoded')]",
        "severity": "Medium",
        "enabled": true,
        "frequency": "PT1H",
        "period": "PT1H",
        "tactics": [
          "Execution",
          "DefenseEvasion"
        ],
        "techniques": [
          "T1059"
        ],
        "createIncident": true,
        "grouping": {
          "enabled": true,
          "matchingMethod": "AllEntities"
        },
        "entities": {
          "accountFullName": "SubjectUserName",
          "hostName": "Computer"
        },
        "customDetails": {
          "EncodedArgument": "EncArg",
          "CommandLine": "CommandLine"
        }
      },
      {
        "name": "uc-suspicious-login",
        "displayName": "[PROD] [ORG] – Suspicious Login Attempts",
        "kql": "[variables('kqlLogin')]",
        "severity": "Medium",
        "enabled": true,
        "frequency": "PT1H",
        "period": "PT1H",
        "tactics": [
          "InitialAccess"
        ],
        "techniques": [
          "T1078"
        ],
        "createIncident": true,
        "grouping": {
          "enabled": true,
          "matchingMethod": "AllEntities"
        },
        "entities": {
          "ipAddress": "IPAddress"
        },
        "customDetails": {}
      },
      {
        "name": "uc-admin-anomaly",
        "displayName": "[PROD] [ORG] – Admin Account Anomaly Detection",
        "kql": "[variables('kqlAdmin')]",
        "severity": "High",
        "enabled": true,
        "frequency": "PT1H",
        "period": "PT1H",
        "tactics": [
          "Persistence",
          "PrivilegeEscalation",
          "DefenseEvasion"
        ],
        "techniques": [
          "T1078"
        ],
        "createIncident": true,
        "grouping": {
          "enabled": true,
          "matchingMethod": "AllEntities"
        },
        "entities": {
          "accountFullName": "UserPrincipalName"
        },
        "customDetails": {}
      },
      {
        "name": "test1",
        "displayName": "[PROD] [ORG] – Test1",
        "kql": "[variables('kqltest1')]",
        "severity": "Medium",
        "enabled": true,
        "frequency": "PT1H",
        "period": "PT1H",
        "tactics": [
          "InitialAccess"
        ],
        "techniques": [
          "T1078"
        ],
        "createIncident": true,
        "grouping": {
          "enabled": true,
          "matchingMethod": "AllEntities"
        },
        "entities": {
          "ipAddress": "IpAddress",
          "accountFullName": "SubjectUserName",
          "hostName": "Computer"
        },
        "customDetails": {
          "LogonType": "LogonType"
        }
      },
      {
        "name": "test2",
        "displayName": "[PROD] [ORG] – Test2",
        "kql": "[variables('kqltest2')]",
        "severity": "Medium",
        "enabled": true,
        "frequency": "PT1H",
        "period": "PT1H",
        "tactics": [
          "InitialAccess"
        ],
        "techniques": [
          "T1078"
        ],
        "createIncident": true,
        "grouping": {
          "enabled": true,
          "matchingMethod": "AllEntities"
        },
        "entities": {
          "ipAddress": "IpAddress",
          "accountFullName": "SubjectUserName",
          "hostName": "Computer"
        },
        "customDetails": {
          "LogonType": "LogonType"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sentinel-rules-prod",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "rules": {
            "value": "[variables('rules')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "7392736661845730240"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace name (Sentinel-enabled)"
              }
            },
            "rules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "List of scheduled analytics rules to deploy"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "scheduled",
                "count": "[length(parameters('rules'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rule-{0}', uniqueString(parameters('rules')[copyIndex()].name))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('rules')[copyIndex()].name]"
                  },
                  "displayName": {
                    "value": "[parameters('rules')[copyIndex()].displayName]"
                  },
                  "kql": {
                    "value": "[parameters('rules')[copyIndex()].kql]"
                  },
                  "workspaceName": {
                    "value": "[parameters('workspaceName')]"
                  },
                  "severity": {
                    "value": "[parameters('rules')[copyIndex()].severity]"
                  },
                  "enabled": "[if(equals(parameters('rules')[copyIndex()].enabled, null()), createObject('value', true()), createObject('value', bool(parameters('rules')[copyIndex()].enabled)))]",
                  "frequency": {
                    "value": "[parameters('rules')[copyIndex()].frequency]"
                  },
                  "period": {
                    "value": "[parameters('rules')[copyIndex()].period]"
                  },
                  "createIncident": {
                    "value": "[parameters('rules')[copyIndex()].createIncident]"
                  },
                  "tactics": {
                    "value": "[parameters('rules')[copyIndex()].tactics]"
                  },
                  "techniques": {
                    "value": "[parameters('rules')[copyIndex()].techniques]"
                  },
                  "grouping": {
                    "value": "[coalesce(parameters('rules')[copyIndex()].grouping, createObject())]"
                  },
                  "entities": {
                    "value": "[coalesce(parameters('rules')[copyIndex()].entities, createObject())]"
                  },
                  "customDetails": {
                    "value": "[coalesce(parameters('rules')[copyIndex()].customDetails, createObject())]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "4033084776913807239"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "kql": {
                      "type": "string"
                    },
                    "workspaceName": {
                      "type": "string"
                    },
                    "severity": {
                      "type": "string",
                      "defaultValue": "Medium",
                      "allowedValues": [
                        "Critical",
                        "High",
                        "Medium",
                        "Low",
                        "Informational"
                      ]
                    },
                    "enabled": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "frequency": {
                      "type": "string",
                      "defaultValue": "PT1H"
                    },
                    "period": {
                      "type": "string",
                      "defaultValue": "PT1H"
                    },
                    "createIncident": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "tactics": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "techniques": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "grouping": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "entities": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "customDetails": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "groupingDefaults": {
                      "enabled": true,
                      "matchingMethod": "AllEntities",
                      "lookbackDuration": "PT2H",
                      "reopenClosedIncident": false,
                      "groupByEntities": [],
                      "groupByAlertDetails": [],
                      "groupByCustomDetails": []
                    },
                    "g": "[union(variables('groupingDefaults'), parameters('grouping'))]",
                    "entitiesDefaults": {
                      "accountFullName": null,
                      "hostName": null,
                      "ipAddress": null
                    },
                    "e": "[union(variables('entitiesDefaults'), parameters('entities'))]",
                    "cd": "[parameters('customDetails')]",
                    "ruleId": "[guid(deployment().name, parameters('name'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.SecurityInsights/alertRules",
                      "apiVersion": "2025-06-01",
                      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('workspaceName'))]",
                      "name": "[variables('ruleId')]",
                      "kind": "Scheduled",
                      "properties": {
                        "displayName": "[parameters('displayName')]",
                        "description": "Scheduled analytics rule deployed via Bicep.",
                        "enabled": "[parameters('enabled')]",
                        "severity": "[parameters('severity')]",
                        "query": "[parameters('kql')]",
                        "queryFrequency": "[parameters('frequency')]",
                        "queryPeriod": "[parameters('period')]",
                        "triggerOperator": "GreaterThan",
                        "triggerThreshold": 0,
                        "tactics": "[parameters('tactics')]",
                        "techniques": "[parameters('techniques')]",
                        "suppressionEnabled": false,
                        "suppressionDuration": "PT5M",
                        "incidentConfiguration": {
                          "createIncident": "[parameters('createIncident')]",
                          "groupingConfiguration": {
                            "enabled": "[variables('g').enabled]",
                            "matchingMethod": "[variables('g').matchingMethod]",
                            "lookbackDuration": "[variables('g').lookbackDuration]",
                            "reopenClosedIncident": "[variables('g').reopenClosedIncident]",
                            "groupByEntities": "[variables('g').groupByEntities]",
                            "groupByAlertDetails": "[variables('g').groupByAlertDetails]",
                            "groupByCustomDetails": "[variables('g').groupByCustomDetails]"
                          }
                        },
                        "entityMappings": "[if(greater(length(parameters('entities')), 0), flatten(createArray(if(not(equals(variables('e').accountFullName, null())), createArray(createObject('entityType', 'Account', 'fieldMappings', createArray(createObject('identifier', 'FullName', 'columnName', string(variables('e').accountFullName))))), createArray()), if(not(equals(variables('e').hostName, null())), createArray(createObject('entityType', 'Host', 'fieldMappings', createArray(createObject('identifier', 'HostName', 'columnName', string(variables('e').hostName))))), createArray()), if(not(equals(variables('e').ipAddress, null())), createArray(createObject('entityType', 'IP', 'fieldMappings', createArray(createObject('identifier', 'Address', 'columnName', string(variables('e').ipAddress))))), createArray()))), createArray())]",
                        "alertDetailsOverride": {
                          "alertDisplayNameFormat": "[parameters('displayName')]"
                        },
                        "customDetails": "[variables('cd')]"
                      }
                    }
                  ],
                  "outputs": {
                    "ruleName": {
                      "type": "string",
                      "value": "[variables('ruleId')]"
                    },
                    "ruleDisplayName": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), 'Microsoft.SecurityInsights/alertRules', variables('ruleId')), '2025-06-01').displayName]"
                    },
                    "ruleEnabled": {
                      "type": "bool",
                      "value": "[reference(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), 'Microsoft.SecurityInsights/alertRules', variables('ruleId')), '2025-06-01').enabled]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "deployedRules": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('rules'))]",
                "input": {
                  "name": "[parameters('rules')[copyIndex()].name]",
                  "displayName": "[parameters('rules')[copyIndex()].displayName]",
                  "enabled": "[coalesce(parameters('rules')[copyIndex()].enabled, true())]"
                }
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "deployedRules": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sentinel-rules-prod'), '2022-09-01').outputs.deployedRules.value]"
    }
  }
}